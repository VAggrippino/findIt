doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
    title Find It! &bull; #{searchType} results for #{query}

    link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous')
    link(rel='stylesheet' href='main.css')

  body
    .container
      .row
        a#titleLink(href='/')
          h1.title.px-0.col-auto
            span F
            span i
            span n
            span d
            | 
            span I
            span t
            span !

        form#searchForm.form-inline.col(action='/search' method='get')
          input(name='searchType' value=searchType type='hidden')
          input#query.form-control.mr-2(type='text' name='query' value=query)
          button.btn.btn-primary.col-1(type="submit") Go!
      .row
        ul.nav.nav-pills
          each link in ['Web', 'Images', 'Books', 'Movies', 'Products']
            - let lcLink = link.toLowerCase()
            - let classes = ['nav-link']
            if results.searchType === lcLink
              - classes.push('active')

            li.nav-item
              a(class=classes href=`?searchType=${lcLink}&query=${encodeURI(query)}`)= link

      if results.resultCount == 0
        div.jumbotron.my-4
          h1.display-4 No Results Found
          p.lead.
            Your search - #[span.font-weight-bold= query] - did not match any
            documents.

          p.lead Suggestions:

          ul
            li Make sure that all words are spelled correctly.
            li Try different keywords.
            li Try more general keywords.
            li Try fewer keywords.
      else
        .row
          small.text-muted.
            I found about #{results.resultCount} results in #{results.searchTime} seconds.
            &mdash;
            Find It! #{searchType} search is powered by #{poweredBy}.

        each item in results.items
          .row.flex-column
            a(href=item.link) !{item.htmlTitle}
            small.text-info= item.displayLink
            p !{item.htmlSnippet}

        if results.pages > 1
          - let queryParts = {searchType: searchType, query: encodeURI(query)}
          - let getQueryString = page => {
          -   queryParts.page = +page;
          -   return '?' + Object.entries(queryParts).map(part => part.join('=')).join('&')
          - }
          - let queryString = getQueryString(1)

          - let n
          if +page > 3
            - n = +page - 2
          else
            - n = 1

          - let lastN = +page + 2
          <!-- lastN initial value: #{lastN} -->
          if lastN > results.pages
            - lastN = results.pages

          if lastN < 5
            if results.pages > 5
              - lastN = 5
              <!-- lastN < 5 && results.pages > 5, lastN: #{lastN} -->
            else
              - lastN = results.pages
              <!-- lastN < 5 && results.pages <= 5, lastN: #{lastN} -->

          <!-- lastN: #{lastN} -->

          .row.justify-content-center
            nav(aria-label='Search results pages')
              ul.pagination
                li.page-item(class=(page === 1 ? 'disabled' : ''))
                  - queryParts.page = page - 1
                  - queryString = getQueryString(n)
                  a.page-link(href=queryString aria-label='Previous') Previous

                while n <= lastN
                  - queryParts.page = n
                  - queryString = getQueryString(n)
                  //- n is a number, but page is a string because it's from the query string
                  li.page-item(class=(n == page ? 'disabled font-weight-bold' : ''))
                    a.page-link(href=queryString)= n++

                if results.pages > lastN
                  li.page-item.disabled
                    a.page-link ...

                li.page-item(class=(page == results.pages ? 'disabled' : ''))
                  - let nextPage = page + 1
                  - queryString = getQueryString(nextPage)
                  a.page-link(href=queryString aria-label='Next') Next

    script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous')
    script(src='main.js')
